// SPDX-License-Identifier: MIT
pragma solidity ^0.8.10;

contract DepositFunds {
    mapping(address => uint) public balances;

    function deposit() public payable {
        balances[msg.sender] += msg.value;
    }

    function withdraw() public {
        // 先获取到调用者的余额 记为bal
        uint bal = balances[msg.sender];
        require(bal > 0);

        // 用call方法来转账 value的值是前面获取到的bal
        // 问题就出在这里 攻击者会部署一个合约 合约的fallback是一个payable的函数，如
        (bool sent, ) = msg.sender.call{value: bal}("");
        require(sent, "Failed to send Ether");

        balances[msg.sender] = 0;
    }


}